!function (a, b) {
    "use strict"; a.fn.extend({
        bannerSlider: function (c) {
            function j(b, c) { this.container = b, this.cap = this.container.parent(), this.currentli, this.oldli, this.fulloff = 0, this.httpprefix = "https:" === location.protocol ? "https:" : "http:", this.opt = c, this.opt.container = this.container, this.opt.button = "next", this.opt.oldItem = 0, this.buttons = a('<div class="buttons">\t\t\t\t\t\t\t\t\t<div class="previous-btn"></div>\t\t\t\t\t\t\t\t\t<div class="play-btn"></div>\t\t\t\t\t\t\t\t\t<div class="next-btn"></div>\t\t\t\t\t\t\t\t</div>'), this.playBtn, this.previousBtn, this.nextBtn, this.cPreviousBtn, this.cNextBtn, this.bullets, this.tooltip, this.verticalButtonAlign = !1, this.listItems, this.preloader = a('<div class="preloader"></div>'), this.timer = a('<div class="timer"></div>'), this.clockTimerHolder = a('<div class="clock-timer-holder"></div>'), this.clockTimer = a('<canvas class="clock-timer"></canvas>'), this.clockContext, this.timerId = null, this.delay = 0, this.paused = !1, this.opt.ie = !1, this.opt.ie9 = !1, this.opt.videoPlaying = !1, this.opt.videoStarted = !1, this.opt.videoStopped = !1, this.init() } var d, e, f = { startWidth: 1170, startHeight: 500, autoPlay: !0, playOnce: !1, selectOnHover: !1, randomize: !1, delay: 5e3, transition: "random", easing: "", velocity: 1, showButton: !0, showNumber: !0, showPlayPauseButton: !0, showPreviousNextArrow: !1, showCenterPreviousNextArrow: !0, showButtonOnHover: !1, buttonAlign: "BR", buttonWidth: 20, buttonHeight: 20, buttonBorderRadius: 2, buttonMargin: 1, buttonOffsetHorizontal: 10, buttonOffsetVertical: 10, touchEnabled: !0, showThumb: !1, thumbWidth: 72, thumbHeight: 54, showTimer: !0, timerType: "clock", timerArcSize: 2, timerAlign: "top", pauseOnHover: !1, shadow: 0, showTooltip: !0, tooltipType: "image", hideCaptionAtResolution: 0, captionEasing: "easeOutQuint", lazyLoad: !1, currentItem: 0, scrollMouseWheel: !0, fullWidth: !1, fullScreen: !1, fullScreenOffsetContainer: "", videoJsPath: "videojs/" }, c = a.extend({}, f, c), g = { TL: 0, TC: 1, TR: 2, BL: 3, BC: 4, BR: 5, LT: 6, LC: 7, LB: 8, RT: 9, RC: 10, RB: 11 }, h = 0, i = { block: h++, cube: h++, cubeRandom: h++, cubeShow: h++, cubeStop: h++, cubeStopRandom: h++, cubeHide: h++, cubeSize: h++, cubeSpread: h++, horizontal: h++, showBars: h++, showBarsRandom: h++, tube: h++, fade: h++, fadeFour: h++, parallel: h++, blind: h++, blindHeight: h++, blindWidth: h++, directionTop: h++, directionBottom: h++, directionRight: h++, directionLeft: h++, glassCube: h++, glassBlock: h++, circles: h++, circlesInside: h++, circlesRotate: h++, upBars: h++, downBars: h++, hideBars: h++, swapBars: h++, swapBarsBack: h++, swapBlocks: h++, cut: h++, random: h++ }; j.prototype = {
                init: function () { var c = this; if (this.container.data("opt", this.opt), this.container.attr("id") == b && this.container.attr("id", "banner-slider-" + Math.round(1e3 * Math.random() + 5)), this.checkBrowser(), this.checkJQueryVersion(), a.support.transition || (a.fn.transition = a.fn.animate), a.cssEase.bounce = "cubic-bezier(0,1,0.5,1.3)", this.loadYouTubeAPI(), this.loadVimeoAPI(), this.loadVideoJSAPI(), this.opt.randomize && this.randomizeSlides(), this.listItems = this.container.find(">ul:first >li"), this.isTouchDevice() && (this.opt.showButtonOnHover = this.opt.pauseOnHover = this.opt.selectOnHover = !1), this.opt.slideCount = this.listItems.length, this.opt.slideCount <= 1 && (this.opt.autoPlay = this.opt.showButton = this.opt.showPlayPauseButton = this.opt.showPreviousNextArrow = this.opt.showCenterPreviousNextArrow = this.opt.showTimer = this.opt.scrollMouseWheel = !1), this.opt.showCenterPreviousNextArrow && (this.opt.showPreviousNextArrow = !1), this.opt.showThumb && (this.opt.showNumber = !1, "image" == this.opt.tooltipType && (this.opt.tooltipType = "none")), this.container.append(this.preloader), this.createTimer(), this.opt.oldItem = this.opt.currentItem - 1, this.opt.oldItem == -1 && (this.opt.oldItem = this.opt.slideCount - 1), 0 == this.container.height() && this.container.height(this.opt.startHeight), 0 == this.opt.startWidth && (this.opt.startWidth = this.container.width()), 0 == this.opt.startHeight && (this.opt.startHeight = this.container.height()), this.opt.width = this.container.width(), this.opt.height = this.container.height(), this.opt.bw = this.opt.startWidth / this.container.width(), this.opt.bh = this.opt.startHeight / this.container.height(), this.opt.width != this.opt.startWidth && (this.opt.height = Math.round(this.opt.startHeight * (this.opt.width / this.opt.startWidth)), this.container.height(this.opt.height)), this.opt.velocity >= 2 && (this.opt.velocity = 1.3), this.opt.velocity <= 0 && (this.opt.velocity = 1), this.createShadow(), this.opt.lazyLoad) { var d = this.container.find("ul >li >img").first(); d.data("lazyload") != b && d.attr("src", d.data("lazyload")), d.data("lazydone", 1), d.parent().waitForImages(function () { d.parent().waitForImages(function () { c.preloader.fadeOut(600), setTimeout(function () { c.prepareSlides(), c.createButtons(), c.swapSlide(), c.container.trigger("banner_rotator.onloaded") }, 600) }) }) } else this.container.waitForImages(function () { c.container.waitForImages(function () { c.preloader.fadeOut(600), setTimeout(function () { c.prepareSlides(), c.createButtons(), c.swapSlide(), c.container.trigger("banner_rotator.onloaded") }, 600) }) }); a(window).resize(function () { 0 != a("body").find(c.container) && c.container.outerWidth(!0) != c.opt.width && c.containerResized() }), this.container.find(".scrollbelowslider").on("click", function () { var b = 0; try { b = a("body").find(c.opt.fullScreenOffsetContainer).height() } catch (a) { } try { b -= a(this).data("scrolloffset") } catch (a) { } a("body,html").animate({ scrollTop: c.container.offset().top + c.container.find(">ul >li").height() - b + "px" }, { duration: 400 }) }) }, checkBrowser: function () { this.opt.ie = !a.support.opacity, this.opt.ie9 = 9 == document.documentMode }, checkJQueryVersion: function () { var b = a.fn.jquery.split("."), c = parseFloat(b[0]), d = parseFloat(b[1]); parseFloat(b[2] || "0"); 1 == c && d < 7 && alert("jQuery version is " + b + ". Please, update it to 1.7 or later.") }, isTouchDevice: function () { return "ontouchstart" in window || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 }, loadYouTubeAPI: function () { var b = this, c = !1; this.container.find(".caption iframe").each(function () { try { if (a(this).attr("src").indexOf("you") > 0 && !c) { c = !0; var d = b.httpprefix + "//www.youtube.com/iframe_api", e = document.createElement("script"); e.src = d; var f = document.getElementsByTagName("script")[0], g = !0; a("head").find("*").each(function () { a(this).attr("src") == d && (g = !1) }), g && f.parentNode.insertBefore(e, f) } } catch (a) { } }) }, loadVimeoAPI: function () { var b = this, c = !1; this.container.find(".caption iframe").each(function () { try { var d = b.httpprefix + "//a.vimeocdn.com/js/froogaloop2.min.js"; if (a(this).attr("src").indexOf("vim") > 0 && !c) { c = !0; var e = document.createElement("script"); e.src = d; var f = document.getElementsByTagName("script")[0], g = !0; a("head").find("*").each(function () { a(this).attr("src") == d && (g = !1) }), g && f.parentNode.insertBefore(e, f) } if (a(this).attr("src").indexOf("vim") > 0) { var e = document.createElement("script"); e.src = d; var f = document.getElementsByTagName("script")[0]; f.parentNode.insertBefore(e, f) } } catch (a) { } }) }, loadVideoJSAPI: function () { var b = this, c = !1; this.container.find(".caption video").each(function (d) { try { if (a(this).hasClass("video-js") && !c) { c = !0; var e = b.opt.videoJsPath + "video.js", f = document.createElement("script"); f.src = e; var g = document.getElementsByTagName("script")[0], h = !0; a("head").find("*").each(function () { a(this).attr("src") == e && (h = !1) }), h && (g.parentNode.insertBefore(f, g), a("head").append('<link rel="stylesheet" type="text/css" href="' + b.opt.videoJsPath + 'video-js.min.css" media="screen" />'), a("head").append('<script> videojs.options.flash.swf = "' + b.opt.videoJsPath + 'video-js.swf";</script>')) } } catch (a) { } }) }, randomizeSlides: function () { var a = this.container.find(">ul:first-child >li").length, b = new Array(a), c = 0; for (c = 0; c < a; c++) b[c] = this.container.find(">ul:first-child >li:eq(" + c + ")").clone(!0); for (c = 0; c < a; c++) { var d = Math.floor(Math.random() * a), e = b[c]; b[c] = b[d], b[d] = e } for (c = 0; c < a; c++) this.container.find(">ul:first-child >li:eq(" + c + ")").replaceWith(b[c]) }, randomizeArray: function (a) { for (var b = a.length, c = 0; c < b; c++) { var d = Math.floor(Math.random() * b), e = a[c]; a[c] = a[d], a[d] = e } }, preventDefault: function () { return !1 }, prepareSlides: function () { var c = this; this.container.find(".caption").each(function () { a(this).addClass(a(this).data("transition")), a(this).addClass("start") }), this.container.find(">ul:first").css({ overflow: "hidden", width: "100%", height: "100%", maxHeight: this.cap.css("maxHeight") }), this.listItems.each(function () { var c = a(this); if (c.css({ width: "100%", height: "100%", overflow: "hidden" }), c.data("link") != b) { var d = c.data("link"), e = "_self"; c.data("target") != b && (e = c.data("target")), c.prepend('<div class="caption sft slidelink" data-x="0" data-y="0" data-start="0"><a target="' + e + '" href="' + d + '"><div></div></a></div>') } }), this.listItems.find(">img").each(function () { var d = a(this); d.addClass("defaultimg"), d.data("lazyload") == b && (c.setSize(d), c.setSize(d)) }), this.cap.css({ overflow: "visible" }) }, createShadow: function () { this.opt.shadow && (this.cap.append('<div class="banner-slider-shadow banner-slider-shadow' + this.opt.shadow + '"></div>'), this.cap.find(".banner-slider-shadow").css({ width: this.opt.width })) }, createButtons: function () { if (this.cap.append(this.buttons), this.buttons.find("div").css({ width: this.opt.buttonWidth, height: this.opt.buttonHeight }).mousedown(this.preventDefault()), this.verticalButtonAlign = g[this.opt.buttonAlign] >= g.LT, this.opt.showButton) { if (this.opt.showThumb) { var c, e, b = ""; for (d = 0; d < this.opt.slideCount; d++) c = a(this.listItems.get(d)), e = c.data("thumb"), b += '<div class="thumb" data-index="' + d + '">\t\t\t\t\t\t\t\t\t\t\t\t<img src="' + e + '" width="' + this.opt.thumbWidth + '" height="' + this.opt.thumbHeight + '" data-index="' + d + '" />\t\t\t\t\t\t\t\t\t\t    </div>'; this.bullets = a(b), this.bullets.css({ width: this.opt.thumbWidth, height: this.opt.thumbHeight }).mousedown(this.preventDefault()) } else { var b = ""; for (d = 0; d < this.opt.slideCount; d++) b += '<div class="bullet" data-index="' + d + '">' + (this.opt.showNumber ? d + 1 : "") + "</div>"; this.bullets = a(b), this.bullets.css({ width: this.opt.buttonWidth, height: this.opt.buttonHeight, "line-height": this.opt.buttonHeight + "px" }).mousedown(this.preventDefault()) } this.buttons.prepend(this.bullets), this.opt.selectOnHover ? this.bullets.bind("mouseover", { elem: this }, this.selectItem) : this.bullets.bind("click", { elem: this }, this.selectItem), this.verticalButtonAlign ? (this.buttons.find("div").addClass("vertical").css("margin-bottom", this.opt.buttonMargin), this.buttons.find("div:last-child").css("margin-bottom", "0")) : (this.buttons.find("div").css("margin-right", this.opt.buttonMargin), this.buttons.find("div:last-child").css("margin-right", "0")), this.setButtonAlign(), this.createTooltip() } if (this.buttons.find("div").css({ "border-radius": this.opt.buttonBorderRadius }), this.playBtn = this.buttons.find(".play-btn"), this.previousBtn = this.buttons.find(".previous-btn"), this.nextBtn = this.buttons.find(".next-btn"), this.playBtn.toggleClass("pause", this.opt.autoPlay).bind("click", { elem: this }, this.togglePlay), this.opt.showPlayPauseButton || this.playBtn.hide(), this.previousBtn.bind("click", { elem: this }, this.previousItem), this.nextBtn.bind("click", { elem: this }, this.nextItem), this.opt.showPreviousNextArrow || (this.previousBtn.hide(), this.nextBtn.hide()), this.pauseOnHoverBind(), this.opt.showCenterPreviousNextArrow && (this.container.append('<div class="s-prev"></div><div class="s-next"></div>'), this.cPreviousBtn = this.container.find(".s-prev"), this.cNextBtn = this.container.find(".s-next"), this.cPreviousBtn.bind("click", { elem: this }, this.previousItem).mousedown(this.preventDefault()), this.cNextBtn.bind("click", { elem: this }, this.nextItem).mousedown(this.preventDefault()), this.opt.showButtonOnHover && (this.cPreviousBtn.css("opacity", 0), this.cNextBtn.css("opacity", 0))), this.opt.showButtonOnHover && (this.buttons.css("opacity", 0), this.container.bind("mouseenter", { elem: this }, this.showSideButtons).bind("mouseleave", { elem: this }, this.hideSideButtons), this.buttons.bind("mouseenter", { elem: this }, this.showSideButtons).bind("mouseleave", { elem: this }, this.hideSideButtons)), this.swipeAction(), this.opt.scrollMouseWheel) try { this.container.bind("mousewheel", { elem: this }, this.mouseScroll).bind("DOMMouseScroll", { elem: this }, this.mouseScroll) } catch (a) { } this.buttons.css("visibility", "visible") }, setButtonAlign: function () { switch (g[this.opt.buttonAlign]) { case g.BL: this.setHPanel("left"), this.setInsideHP("bottom"); break; case g.BC: this.setHPanel("center"), this.setInsideHP("bottom"); break; case g.BR: this.setHPanel("right"), this.setInsideHP("bottom"); break; case g.TL: this.setHPanel("left"), this.setInsideHP("top"); break; case g.TC: this.setHPanel("center"), this.setInsideHP("top"); break; case g.TR: this.setHPanel("right"), this.setInsideHP("top"); break; case g.LT: this.setVPanel("top"), this.setInsideVP("left"); break; case g.LC: this.setVPanel("center"), this.setInsideVP("left"); break; case g.LB: this.setVPanel("bottom"), this.setInsideVP("left"); break; case g.RT: this.setVPanel("top"), this.setInsideVP("right"); break; case g.RC: this.setVPanel("center"), this.setInsideVP("right"); break; case g.RB: this.setVPanel("bottom"), this.setInsideVP("right") } }, setHPanel: function (a) { var b, c; "center" == a ? (b = Math.round(this.buttons.width() / 2), this.buttons.css({ left: "50%", "margin-left": "-" + b + "px" })) : "left" == a ? (c = parseInt(this.cap.css("padding-left")), this.buttons.css({ left: this.opt.buttonOffsetHorizontal + c + "px" })) : (c = parseInt(this.cap.css("padding-right")), this.buttons.css({ right: this.opt.buttonOffsetHorizontal + c + "px" })) }, setVPanel: function (a) { var b, c; "center" == a ? (b = Math.round(this.buttons.height() / 2), this.buttons.css({ top: "50%", "margin-top": "-" + b + "px" })) : "top" == a ? (c = parseInt(this.cap.css("padding-top")), this.buttons.css({ top: this.opt.buttonOffsetVertical + c + "px" })) : (c = parseInt(this.cap.css("padding-bottom")), this.buttons.css({ bottom: this.opt.buttonOffsetVertical + c + "px" })) }, setInsideHP: function (a) { var b; "top" == a ? (b = parseInt(this.cap.css("padding-top")), this.buttons.css({ top: this.opt.buttonOffsetVertical + b + "px" })) : (b = parseInt(this.cap.css("padding-bottom")), this.buttons.css({ bottom: this.opt.buttonOffsetVertical + b + "px" })) }, setInsideVP: function (a) { var b; "left" == a ? (b = parseInt(this.cap.css("padding-left")), this.buttons.css({ left: this.opt.buttonOffsetHorizontal + b + "px" })) : (b = parseInt(this.cap.css("padding-right")), this.buttons.css({ right: this.opt.buttonOffsetHorizontal + b + "px" })) }, swipeAction: function () { var a = this; this.opt.touchEnabled && this.container.swipe({ data: a.container, swipeRight: function () { a.opt.button = "previous", a.resetTimer(), a.opt.oldItem = a.opt.currentItem, a.opt.currentItem = a.opt.currentItem > 0 ? a.opt.currentItem - 1 : a.opt.slideCount - 1, a.swapSlide() }, swipeLeft: function () { a.opt.button = "next", a.resetTimer(), a.opt.oldItem = a.opt.currentItem, a.opt.currentItem = a.opt.currentItem < a.opt.slideCount - 1 ? a.opt.currentItem + 1 : 0, a.swapSlide() }, allowPageScroll: "auto" }) }, mouseScroll: function (a) { var b = a.data.elem, c = "undefined" == typeof a.originalEvent.wheelDelta ? -a.originalEvent.detail : a.originalEvent.wheelDelta; return c > 0 ? b.previousItem() : b.nextItem(), !1 }, createTooltip: function () { if (this.opt.showTooltip) if ("text" == this.opt.tooltipType) switch (a("body").append("<div id='rotator-tooltip'><div class='arrow'></div><div class='tt-txt'></div></div>"), this.tooltip = a("body").find("#rotator-tooltip"), this.bullets.bind("mouseover", { elem: this }, this.showTooltip).bind("mouseout", { elem: this }, this.hideTooltip).bind("mousemove", { elem: this }, this.moveTooltip), g[this.opt.buttonAlign]) { case g.TL: case g.TC: case g.TR: this.tooltip.data("bottom", !0).addClass("txt-down"); break; default: this.tooltip.data("bottom", !1).addClass("txt-up") } else if ("image" == this.opt.tooltipType) { for (var c = '<div id="rotator-tooltip"><div class="arrow"></div>', d = 0; d < this.opt.slideCount; d++) { var e = a(this.listItems.get(d)).data("thumb"); c += e != b ? '<img src="' + e + '" />' : "<img/>" } switch (c += "</div>", a("body").append(c), this.tooltip = a("body").find("#rotator-tooltip"), this.tooltip.css({ opacity: 0, "-moz-opacity": 0, filter: "alpha(opacity=0)" }), g[this.opt.buttonAlign]) { case g.TL: case g.TC: case g.TR: this.bullets.bind("mouseover", { elem: this }, this.showHImgTooltip), this.tooltip.data("bottom", !0).addClass("img-down"); break; case g.LT: case g.LC: case g.LB: this.bullets.bind("mouseover", { elem: this }, this.showVImgTooltip), this.tooltip.data("right", !0).addClass("img-right"); break; case g.RT: case g.RC: case g.RB: this.bullets.bind("mouseover", { elem: this }, this.showVImgTooltip), this.tooltip.data("right", !1).addClass("img-left"); break; default: this.bullets.bind("mouseover", { elem: this }, this.showHImgTooltip), this.tooltip.data("bottom", !1).addClass("img-up") } this.bullets.bind("mouseout", { elem: this }, this.hideImgTooltip) } }, showHImgTooltip: function (b) { var c = b.data.elem, d = c.tooltip.find(">img").eq(a(this).index()); if (d.attr("src") && (c.tooltip.find(">img").hide(), d.show(), d[0].complete || "complete" == d[0].readyState)) { var e = c.tooltip.data("bottom") ? a(this).outerHeight() : -c.tooltip.outerHeight(), f = a(this).offset(), g = f.top + e, h = c.tooltip.data("bottom") ? -5 : 5; c.tooltip.stop(!0, !0).css({ display: "block", top: g + h, left: f.left + (a(this).outerWidth() - c.tooltip.outerWidth()) / 2 }).delay(300).animate({ top: g, opacity: 1 }, 500) } }, showVImgTooltip: function (b) { var c = b.data.elem, d = c.tooltip.find(">img").eq(a(this).index()); if (d.attr("src") && (c.tooltip.find(">img").hide(), d.show(), d[0].complete || "complete" == d[0].readyState)) { var e = c.tooltip.data("right") ? a(this).outerWidth() : -c.tooltip.outerWidth(), f = a(this).offset(), g = f.left + e, h = c.tooltip.data("right") ? -5 : 5; c.tooltip.stop(!0, !0).css({ display: "block", top: f.top + (a(this).outerHeight() - c.tooltip.outerHeight()) / 2, left: g + h }).delay(300).animate({ left: g, opacity: 1 }, 500) } }, hideImgTooltip: function (a) { var b = "undefined" != typeof a ? a.data.elem : this; b.opt.showTooltip && b.tooltip.stop(!0, !0).animate({ opacity: 0 }, 500, "linear", function () { b.tooltip.css({ display: "none" }) }) }, showTooltip: function (b) { var c = b.data.elem, d = a(this).data("index"), e = a(c.listItems.get(d)), f = e.data("title"); if ("" != f) { c.tooltip.find(">div.tt-txt").html(f); var g = c.tooltip.data("bottom") ? 20 : -c.tooltip.outerHeight(!0), h = c.tooltip.data("bottom") ? 9 : 13; c.tooltip.css({ top: b.pageY + g, left: b.pageX - h }).stop(!0, !0).delay(300).fadeIn(500) } }, moveTooltip: function (a) { var b = a.data.elem, c = b.tooltip.data("bottom") ? 20 : -b.tooltip.outerHeight(!0), d = b.tooltip.data("bottom") ? 9 : 13; b.tooltip.css({ top: a.pageY + c, left: a.pageX - d }) }, hideTooltip: function (a) { var c = "undefined" != typeof a ? a.data.elem : this; c.opt.showTooltip && c.tooltip != b && c.tooltip.stop(!0, !0).hide() }, togglePlay: function (a) { var c = a.data.elem; return c.opt.autoPlay = !c.opt.autoPlay, c.container.data("play") != b && (c.opt.autoPlay = c.container.data("play"), c.container.removeData("play")), c.playBtn.toggleClass("pause", c.opt.autoPlay), c.opt.autoPlay ? c.startTimer() : c.pauseTimer(), !1 }, play: function (a) { var b = a.data.elem; b.opt.videoPlaying || (b.paused = !1, b.opt.autoPlay = !0, b.playBtn.addClass("pause"), b.startTimer()) }, pause: function (a) { var b = a.data.elem; b.paused = !0, b.opt.autoPlay = !1, b.playBtn.removeClass("pause"), b.pauseTimer() }, pauseLast: function () { this.opt.currentItem == this.opt.slideCount - 1 && (this.opt.autoPlay = !1, this.playBtn.removeClass("pause"), this.container.trigger("banner_rotator.onstop")) }, pauseOnHoverBind: function () { this.opt.autoPlay && this.opt.pauseOnHover && this.container.bind("mouseenter", { elem: this }, this.pause).bind("mouseleave", { elem: this }, this.play) }, pauseOnHoverUnBind: function () { this.opt.pauseOnHover && (this.container.unbind("mouseenter"), this.container.unbind("mouseleave")) }, previousItem: function (a) { var b = "undefined" != typeof a ? a.data.elem : this; return b.opt.button = "previous", b.resetTimer(), b.opt.oldItem = b.opt.currentItem, b.opt.currentItem = b.opt.currentItem > 0 ? b.opt.currentItem - 1 : b.opt.slideCount - 1, b.swapSlide(), !1 }, nextItem: function (a) { var c = "undefined" != typeof a ? a.data.elem : this; return c.opt.button = "next", c.resetTimer(), c.opt.oldItem = c.opt.currentItem, c.opt.currentItem = c.opt.currentItem < c.opt.slideCount - 1 ? c.opt.currentItem + 1 : 0, c.container.data("showslide") != b && (c.opt.currentItem = c.container.data("showslide") - 1, c.container.removeData("showslide")), c.swapSlide(), !1 }, selectItem: function (b) { var c = b.data.elem, d = a(b.target), e = d.data("index"); return e >= 0 && e != c.opt.currentItem && (c.opt.button = e < c.opt.currentItem ? "previous" : "next", c.resetTimer(), c.opt.oldItem = c.opt.currentItem, c.opt.currentItem = e, c.swapSlide(), c.hideTooltip()), !1 }, showSideButtons: function (a) { var b = a.data.elem; b.buttons.stop().animate({ opacity: 1 }, 500, "linear"), b.opt.showCenterPreviousNextArrow && (b.cPreviousBtn.stop().animate({ opacity: .3 }, 500, "linear"), b.cNextBtn.stop().animate({ opacity: .3 }, 500, "linear")) }, hideSideButtons: function (a) { var b = a.data.elem; b.buttons.stop().animate({ opacity: 0 }, 500, "linear"), b.opt.showCenterPreviousNextArrow && (b.cPreviousBtn.stop().animate({ opacity: 0 }, 500, "linear"), b.cNextBtn.stop().animate({ opacity: 0 }, 500, "linear")) }, createTimer: function () { this.container.append(this.timer), this.timer.data("pct", 1).css("width", "0%"); var a = document.createElement("canvas").getContext; a || (this.opt.timerType = "line"), this.opt.showTimer ? "clock" == this.opt.timerType ? (this.clockTimerHolder.css({ width: this.opt.buttonWidth, height: this.opt.buttonHeight }), this.buttons.append(this.clockTimerHolder), this.clockTimerHolder.append(this.clockTimer), this.clockContext = this.clockTimer[0].getContext("2d"), this.clockContext.lineWidth = this.opt.timerArcSize, this.clockContext.lineCap = "round", this.clockTimerContext(this, 0, 1, !0)) : this.timer.addClass("timer-" + this.opt.timerAlign) : this.timer.hide() }, clockTimerContext: function (a, b, c, d) { var e, f = e = a.opt.buttonWidth / 2, g = f - a.opt.buttonWidth / 10; a.clockContext.clearRect(0, 0, this.opt.buttonWidth, this.opt.buttonHeight), a.clockContext.strokeStyle = "rgba(255, 255, 255, .4)", a.clockContext.beginPath(), a.clockContext.arc(f, e, g, 0, 2 * Math.PI, !0), a.clockContext.stroke(), a.clockContext.closePath(), null == d && (a.clockContext.strokeStyle = "rgba(255, 255, 255, .85)", a.clockContext.beginPath(), a.clockContext.arc(f, e, g, 2 * Math.PI * (b / c) - Math.PI / 2, -Math.PI / 2, !0), a.clockContext.stroke(), a.clockContext.closePath()) }, startTimer: function () { if (this.opt.autoPlay && !this.opt.videoPlaying && null == this.timerId) { var b = this, c = Math.round(this.timer.data("pct") * this.delay); if (this.opt.showTimer) if ("clock" == this.opt.timerType) { var d = 780; this.timer.animate({ left: d + "px" }, { easing: "linear", duration: c, queue: !1, step: function (c, e) { a(this).data("pct", 1 - c / d), b.clockTimerContext(b, c, d) } }) } else this.timer.animate({ width: this.opt.width + 1 }, c, "linear"); this.timerId = setTimeout(function (a) { b.resetTimer(), b.opt.button = "next", b.opt.oldItem = b.opt.currentItem, b.opt.currentItem = b.opt.currentItem < b.opt.slideCount - 1 ? b.opt.currentItem + 1 : 0, b.swapSlide() }, c), this.container.trigger("banner_rotator.onresume"), b.opt.videoStarted && (b.container.trigger("banner_rotator.onvideoplay"), b.opt.videoStarted = !1), b.opt.videoStopped && (b.container.trigger("banner_rotator.onvideostop"), b.opt.videoStopped = !1) } }, resetTimer: function () { clearTimeout(this.timerId), this.timerId = null, this.timer.stop(!0).data("pct", 1), this.opt.showTimer && ("clock" == this.opt.timerType ? (this.timer.css("left", "0px"), this.clockTimerContext(this, 0, 1, !0)) : this.timer.width(0)) }, pauseTimer: function () { clearTimeout(this.timerId), this.timerId = null, this.timer.stop(!0), this.opt.showTimer && "line" == this.opt.timerType && this.timer.data("pct", 1 - this.timer.width() / (this.opt.width + 1)), this.container.trigger("banner_rotator.onpause") }, containerResized: function () { var b = this; this.listItems.find(".defaultimg").each(function (c) { b.setSize(a(this)), b.opt.height = Math.round(b.opt.startHeight * (b.opt.width / b.opt.startWidth)), b.container.height(b.opt.height), b.setSize(a(this)); try { b.container.parent().find(".banner-slider-shadow").css({ width: b.opt.width }) } catch (a) { } }), this.setCaptionPosition(), this.container.find(".caption").each(function () { a(this).stop(!0, !0) }), this.showCaption(this.currentli), this.resetTimer(), this.startTimer() }, setSize: function (c) { this.opt.width = parseInt(this.container.width(), 0), this.opt.height = parseInt(this.container.height(), 0), this.opt.bw = this.opt.width / this.opt.startWidth, this.opt.bh = this.opt.height / this.opt.startHeight, this.opt.fullScreen && (this.opt.height = this.opt.bw * this.opt.startHeight), this.opt.bh > 1 && (this.opt.bw = 1, this.opt.bh = 1), (c.data("lazyload") != b && 1 == c.data("lazydone") || c.data("lazyload") == b) && c.data("orgw") != b && 0 != c.data("orgw") && (c.width(c.data("orgw")), c.height(c.data("orgh"))); var d = this.opt.width / c.width(), e = this.opt.height / c.height(); if (this.opt.fw = d, this.opt.fh = e, (c.data("lazyload") != b && 1 == c.data("lazydone") || c.data("lazyload") == b) && (c.data("orgw") != b && 0 != c.data("orgw") || (c.data("orgw", c.width()), c.data("orgh", c.height()))), this.opt.fullWidth && !this.opt.fullScreen) { var f = this.cap.width(), g = this.cap.height(), h = f / c.data("orgw"), i = g / c.data("orgh"); (c.data("lazyload") != b && 1 == c.data("lazydone") || c.data("lazyload") == b) && (c.width(c.width() * i), c.height(g)), c.width() < f && (c.width(f + 50), h = c.width() / c.data("orgw"), c.height(c.data("orgh") * h)), c.width() > f && (c.data("fxof", (f - c.width()) / 2), c.css({ position: "absolute", left: c.data("fxof") + "px" })), c.height() <= g && (c.data("fyof", 0), c.data("fxof", (f - c.width()) / 2), c.css({ position: "absolute", top: c.data("fyof") + "px", left: c.data("fxof") + "px" })), c.height() > g && 1 == c.data("fullwidthcentering") && (c.data("fyof", (g - c.height()) / 2), c.data("fxof", (f - c.width()) / 2), c.css({ position: "absolute", top: c.data("fyof") + "px", left: c.data("fxof") + "px" })) } else if (this.opt.fullScreen) { var f = this.cap.width(), g = a(window).height(), j = (g - this.opt.startHeight * this.opt.bh) / 2; if (j < 0 && (g = this.opt.startHeight * this.opt.bh), this.opt.fullScreenOffsetContainer != b) try { var k = this.opt.fullScreenOffsetContainer.split(","); a.each(k, function (b, c) { g -= a(c).outerHeight(!0) }) } catch (a) { } this.container.parent().height(g), this.container.css({ height: "100%" }), this.opt.height = g; var i = g / c.data("orgh"), h = f / c.data("orgw"); if ((c.data("lazyload") != b && 1 == c.data("lazydone") || c.data("lazyload") === b) && (c.width(c.width() * i), c.height(g)), c.width() < f) { c.width(f + 50); var h = c.width() / c.data("orgw"); c.height(c.data("orgh") * h) } c.width() > f && (c.data("fxof", (f - c.width()) / 2), c.css({ position: "absolute", left: c.data("fxof") + "px" })), c.height() <= g && (c.data("fyof", 0), c.data("fxof", (f - c.width()) / 2), c.css({ position: "absolute", top: c.data("fyof") + "px", left: c.data("fxof") + "px" })), c.height() > g && 1 == c.data("fullwidthcentering") && (c.data("fyof", (g - c.height()) / 2), c.data("fxof", (f - c.width()) / 2), c.css({ position: "absolute", top: c.data("fyof") + "px", left: c.data("fxof") + "px" })) } else (c.data("lazyload") != b && 1 == c.data("lazydone") || c.data("lazyload") == b) && (c.width(this.opt.width), c.height(c.height() * d)), c.height() < this.opt.height && 0 != c.height() && null != c.height() && (c.data("lazyload") != b && 1 == c.data("lazydone") || c.data("lazyload") == b) && (c.height(this.opt.height), c.width(c.data("orgw") * e)); c.data("neww", c.width()), c.data("newh", c.height()) }, getPosNumber: function (a, b) { return !isNaN(a) && a > 0 ? a : b }, getBoolean: function (a, c) { return a != b ? "true" == a.toString() : c }, getRandom: function (a) { return Math.floor(Math.random() * a) }, getBannerClone: function (c) { c || (c = this.currentli.find(".defaultimg")), this.fulloff = c.data("fxof"), this.fulloff == b && (this.fulloff = 0); var d = c.clone(), e = a('<div class="banner-clone"></div>'); return e.append(d), e }, getBannerCloneBackground: function (b) { var c = a('<div class="banner-clone"></div>'); return c.css({ left: b.left, top: b.top, width: b.width, height: b.height, "background-image": "url(" + b.image + ")", "background-position": b.position.left + "px " + b.position.top + "px" }), c }, addBannerClone: function (a) { this.container.append(a) }, swapSlide: function () { var c = this; this.oldli = a(this.listItems.get(this.opt.oldItem)), this.currentli = a(this.listItems.get(this.opt.currentItem)); var d = this.currentli.find(".defaultimg"); if (d.data("lazyload") != b && 1 != d.data("lazydone")) { d.attr("src", d.data("lazyload")), d.data("lazydone", 1), d.data("orgw", 0); var e = setInterval(function () { d.attr("src") == d.data("lazyload") && (clearInterval(e), c.preloader.fadeIn(300), setTimeout(function () { c.resetTimer() }, 180), c.currentli.waitForImages(function () { setTimeout(function () { c.startTimer() }, 190), c.preloader.fadeOut(600), c.setSize(d), c.swapSlideProgress() })) }, 100) } else this.swapSlideProgress() }, swapSlideProgress: function () { var c = this; this.opt.playOnce && this.pauseLast(), this.container.trigger("banner_rotator.onbeforeswap"), this.opt.transitionStarted = !0, this.opt.videoPlaying = !1, this.showListItem(), this.oldli.css({ "z-index": 1 }), this.currentli.css({ "z-index": 2 }), this.delay = this.getPosNumber(this.currentli.data("delay"), this.opt.delay); var d = i[this.currentli.data("transition")]; switch (d == b && (d = i[this.opt.transition]), d == i.random && (d = Math.floor(Math.random() * (h - 1))), this.listItems.each(function () { var b = a(this); b.index() != c.opt.oldItem && b.css("visibility", "hidden"), b.index() != c.opt.currentItem && b.css({ "z-index": 1 }) }), this.removeCaption(this.oldli), this.opt.showButton && (this.buttons.find("div.curr-thumb").removeClass("curr-thumb"), this.buttons.find(">div:eq(" + this.opt.currentItem + ")").addClass("curr-thumb")), d) { case i.block: this.animationBlock(); break; case i.cube: this.animationCube(); break; case i.cubeRandom: this.animationCube({ random: !0 }); break; case i.cubeShow: this.animationCubeShow(); break; case i.cubeStop: this.animationCubeStop(); break; case i.cubeStopRandom: this.animationCubeStop({ random: !0 }); break; case i.cubeHide: this.animationCubeHide(); break; case i.cubeSize: this.animationCubeSize(); break; case i.cubeSpread: this.animationCubeSpread(); break; case i.horizontal: this.animationHorizontal(); break; case i.showBars: this.animationShowBars(); break; case i.showBarsRandom: this.animationShowBars({ random: !0 }); break; case i.tube: this.animationTube(); break; case i.fade: this.animationFade(); break; case i.fadeFour: this.animationFadeFour(); break; case i.parallel: this.animationParallel(); break; case i.blind: this.animationBlind(); break; case i.blindHeight: this.animationBlindDimension({ height: !0 }); break; case i.blindWidth: this.animationBlindDimension({ height: !1, speed: 400, delay: 50 }); break; case i.directionTop: this.animationDirection({ direction: "top" }); break; case i.directionBottom: this.animationDirection({ direction: "bottom" }); break; case i.directionRight: this.animationDirection({ direction: "right", total: 5 }); break; case i.directionLeft: this.animationDirection({ direction: "left", total: 5 }); break; case i.glassCube: this.animationGlassCube(); break; case i.glassBlock: this.animationGlassBlock(); break; case i.circles: this.animationCircles(); break; case i.circlesInside: this.animationCirclesInside(); break; case i.circlesRotate: this.animationCirclesRotate(); break; case i.upBars: this.animationDirectionBars({ direction: "top" }); break; case i.downBars: this.animationDirectionBars({ direction: "bottom" }); break; case i.hideBars: this.animationHideBars(); break; case i.swapBars: this.animationSwapBars(); break; case i.swapBarsBack: this.animationSwapBars({ easing: "easeOutBack" }); break; case i.swapBlocks: this.animationSwapBlocks(); break; case i.cut: this.animationCut() } var e = {}; e.currentItem = this.opt.currentItem + 1, this.container.trigger("banner_rotator.onchange", e) }, finishAnimation: function () { this.opt.transitionStarted = !1, this.container.trigger("banner_rotator.onafterswap"), this.showListItem(), this.showCaption(this.currentli), this.startTimer() }, showListItem: function () { this.container.find(".banner-clone").stop().remove(), this.currentli && this.currentli.css("visibility", "visible") }, animationBlock: function () { var a = this, b = "" == this.opt.easing ? "easeOutQuad" : this.opt.easing, c = 500 / this.opt.velocity, d = 15, e = this.opt.width / d, f = this.opt.height, g = 0; for (g = 0; g < d; g++) { var h = e * g, i = 0, j = this.getBannerClone(), k = j.find("img"); j.css({ left: this.opt.width + 100, top: 0, width: e, height: f }), k.css({ left: this.fulloff - e * g }), this.addBannerClone(j); var l = 80 * g; j.show().delay(l).animate({ top: i, left: h }, c, b); var m = g == d - 1 ? function () { a.finishAnimation() } : ""; j.find("img").hide().delay(l + 100).animate({ opacity: "show" }, c + 300, b, m) } }, animationCube: function (b) {
                    var c = this, b = a.extend({}, { random: !1 }, b || {}), e = "" == this.opt.easing ? "easeOutExpo" : this.opt.easing, f = 700 / this.opt.velocity, g = 8, h = 3, i = g * h, j = Math.ceil(this.opt.width / g), k = Math.ceil(this.opt.height / h), l = this.opt.height + 200, m = this.opt.height + 200, n = 0, o = 0; for (d = 0; d < i; d++) {
                        l = d % 2 == 0 ? l : -l, m = d % 2 == 0 ? m : -m; var p = l + k * n + 150 * n, q = -this.opt.width, r = -(k * n), s = -(j * o), t = k * n, u = j * o, v = this.getBannerClone(); v.hide(); var w = 50 * d; b.random ? (w = 40 * o, v.css({ left: q + "px", top: p + "px", width: j, height: k })) : (f = 500, v.css({
                            left: this.opt.width + j * d, top: this.opt.height + k * d, width: j, height: k
                        })), this.addBannerClone(v); var x = d == i - 1 ? function () { c.finishAnimation() } : ""; v.show().delay(w).animate({ top: t + "px", left: u + "px" }, f, e, x), b.random ? (v.find("img").css({ left: this.fulloff + s + 100, top: r + 50 }), v.find("img").delay(w + f / 2).animate({ left: this.fulloff + s, top: r }, 1e3, "easeOutBack")) : (v.find("img").css({ left: this.fulloff + s, top: r }), v.find("img").delay(w + f / 2).fadeTo(100, .5).fadeTo(300, 1)), n++, n == h && (n = 0, o++)
                    }
                }, animationCubeShow: function () { var a = this, b = "" == this.opt.easing ? "easeOutQuad" : this.opt.easin, c = 400 / this.opt.velocity, e = 8, f = 4, g = e * f, h = Math.ceil(this.opt.width / e), i = Math.ceil(this.opt.height / f), k = 0, l = 0, m = 0, n = 0; for (d = 0; d < g; d++) { k = i * m, l = h * n; var o = 30 * d, p = this.getBannerClone(); p.css({ left: l, top: k, width: h, height: i }).hide(), p.find("img").css({ left: this.fulloff - l, top: -k }), this.addBannerClone(p); var q = d == g - 1 ? function () { a.finishAnimation() } : ""; p.delay(o).animate({ width: "show", height: "show" }, c, b, q), m++, m == f && (m = 0, n++) } }, animationCubeStop: function (b) { var c = this, b = a.extend({}, { random: !1 }, b || {}), e = "" == this.opt.easing ? "easeInQuad" : this.opt.easing, f = 300 / this.opt.velocity, g = this.oldli.find(".defaultimg"); this.currentli.css("visibility", "visible"); var h = 8, i = Math.ceil(this.opt.height / (this.opt.width / 8)), j = h * i, k = Math.ceil(this.opt.width / h), l = Math.ceil(this.opt.height / i), m = 0, n = 0, o = 0, p = 0, q = this.opt.width / 16; for (d = 0; d < j; d++) { m = d % 2 == 0 ? m : -m, n = d % 2 == 0 ? n : -n; var r = m + l * o, s = n + k * p, t = -(l * o), u = -(k * p), v = r - q, w = s - q, x = this.getBannerClone(g); x.css({ left: s + "px", top: r + "px", width: k, height: l }), x.find("img").css({ left: this.fulloff + u, top: t }), this.addBannerClone(x), x.show(); var y = 50 * d; b.random && (f = 400 * (this.getRandom(2) + 1) / this.opt.velocity, v = r, w = s, y = Math.ceil(30 * this.getRandom(30))), b.random && d == j - 1 && (f = 1200, y = 900); var z = d == j - 1 ? function () { c.finishAnimation() } : ""; x.delay(y).animate({ opacity: "hide", top: v + "px", left: w + "px" }, f, e, z), o++, o == i && (o = 0, p++) } }, animationCubeHide: function (a) { var b = this, c = "" == this.opt.easing ? "easeOutQuad" : this.opt.easing, e = 500 / this.opt.velocity, f = this.oldli.find(".defaultimg"); this.currentli.css("visibility", "visible"); var g = 8, h = 3, i = g * h, j = Math.ceil(this.opt.width / g), k = Math.ceil(this.opt.height / h), l = 0, m = 0, n = 0, o = 0; for (d = 0; d < i; d++) { l = d % 2 == 0 ? l : -l, m = d % 2 == 0 ? m : -m; var p = l + k * n, q = m + j * o, r = -(k * n), s = -(j * o), v = this.getBannerClone(f); v.css({ left: q + "px", top: p + "px", width: j, height: k }), v.find("img").css({ left: this.fulloff + s, top: r }), this.addBannerClone(v), v.show(); var w = 50 * d; w = d == i - 1 ? 50 * i : w; var x = d == i - 1 ? function () { b.finishAnimation() } : ""; v.delay(w).animate({ opacity: "hide" }, e, c, x), n++, n == h && (n = 0, o++) } }, animationCubeSize: function () { var a = this, b = "" == this.opt.easing ? "easeInOutQuad" : this.opt.easing, c = 600 / this.opt.velocity, e = this.oldli.find(".defaultimg"); this.currentli.css("visibility", "visible"); var f = 8, g = 3, h = f * g, i = Math.ceil(this.opt.width / f), j = Math.ceil(this.opt.height / g), k = 0, l = 0, m = 0, n = 0; Math.ceil(this.opt.width / 6); for (d = 0; d < h; d++) { k = d % 2 == 0 ? k : -k, l = d % 2 == 0 ? l : -l; var p = k + j * m, q = l + i * n, r = -(j * m), s = -(i * n), v = this.getBannerClone(e); v.css({ left: q, top: p, width: i, height: j }), v.find("img").css({ left: this.fulloff + s, top: r }), this.addBannerClone(v), v.show(); var w = 50 * d, x = d == h - 1 ? function () { a.finishAnimation() } : ""; v.delay(w).animate({ opacity: "hide", width: "hide", height: "hide", top: p + 1.5 * i, left: q + 1.5 * j }, c, b, x), m++, m == g && (m = 0, n++) } }, animationCubeSpread: function () { var a = this, b = "" == this.opt.easing ? "easeOutQuad" : this.opt.easing, c = 700 / this.opt.velocity, e = 8, f = Math.ceil(this.opt.height / (this.opt.width / 8)), g = e * f, h = Math.ceil(this.opt.width / e), i = Math.ceil(this.opt.height / f), j = 0, k = 0, l = 0, m = 0, n = new Array, o = new Array; for (d = 0; d < g; d++) { j = d % 2 == 0 ? j : -j, k = d % 2 == 0 ? k : -k; var p = j + i * l, q = k + h * m; n[d] = [p, q], l++, l == f && (l = 0, m++) } for (l = 0, m = 0, d = 0; d < g; d++) o[d] = d; for (this.randomizeArray(o), d = 0; d < g; d++) { j = d % 2 == 0 ? j : -j, k = d % 2 == 0 ? k : -k; var p = j + i * l, q = k + h * m, r = -(i * l), s = -(h * m), t = p, u = q; p = n[o[d]][0], q = n[o[d]][1]; var v = this.getBannerClone(); v.css({ left: q + "px", top: p + "px", width: h, height: i }), v.find("img").css({ left: this.fulloff + s, top: r }), this.addBannerClone(v); var w = 30 * (30 * Math.random()); d == g - 1 && (w = 900); var x = d == g - 1 ? function () { a.finishAnimation() } : ""; v.delay(w).animate({ opacity: "show", top: t + "px", left: u + "px" }, c, b, x), l++, l == f && (l = 0, m++) } }, animationHorizontal: function () { var a = this, b = "" == this.opt.easing ? "easeOutExpo" : this.opt.easing, c = 700 / this.opt.velocity, e = 7, f = this.opt.width, g = Math.ceil(this.opt.height / e); for (d = 0; d < e; d++) { var h = f, i = d * g, j = this.getBannerClone(); j.css({ left: h + "px", top: i + "px", width: f, height: g }), j.find("img").css({ left: this.fulloff, top: -i }), this.addBannerClone(j); var k = 90 * d, l = d == e - 1 ? function () { a.finishAnimation() } : ""; j.delay(k).animate({ opacity: "show", top: i, left: 0 }, c, b, l) } }, animationShowBars: function (b) { var c = this, b = a.extend({}, { random: !1 }, b || {}), e = "" == this.opt.easing ? "easeOutQuad" : this.opt.easing, f = 400 / this.opt.velocity, g = 10, h = Math.ceil(this.opt.width / g), i = this.opt.height; for (d = 0; d < g; d++) { var j = h * d, k = 0, l = this.getBannerClone(); if (l.css({ left: j, top: k - 50, width: h, height: i }), l.find("img").css({ left: this.fulloff - h * d, top: 0 }), this.addBannerClone(l), b.random) { var m = this.getRandom(g), n = 50 * m; n = d == g - 1 ? 50 * g : n } else { var n = 70 * d; f -= 2 * d } var o = d == g - 1 ? function () { c.finishAnimation() } : ""; l.delay(n).animate({ opacity: "show", top: k + "px", left: j + "px" }, f, e, o) } }, animationTube: function () { var a = this, b = "" == this.opt.easing ? "easeOutElastic" : this.opt.easing, c = 600 / this.opt.velocity, e = 10, f = Math.ceil(this.opt.width / e), g = this.opt.height; for (d = 0; d < e; d++) { var h = 0, i = g, j = f * d, k = this.getBannerClone(); k.css({ left: j, top: i, height: g, width: f }), k.find("img").css({ left: this.fulloff - j }), this.addBannerClone(k); var l = this.getRandom(e), m = 30 * l, n = d == e - 1 ? function () { a.finishAnimation() } : ""; k.show().delay(m).animate({ top: h }, c, b, n) } }, animationFade: function () { var a = this, b = "" == this.opt.easing ? "easeOutQuad" : this.opt.easing, c = 800 / this.opt.velocity, d = this.opt.width, e = this.opt.height, f = 0, g = 0, h = this.getBannerClone(); h.css({ left: f, top: g, width: d, height: e }), this.addBannerClone(h); var i = function () { a.finishAnimation() }; h.animate({ opacity: "show", left: 0, top: 0 }, c, b, i) }, animationFadeFour: function () { var h, i, a = this, b = "" == this.opt.easing ? "easeOutQuad" : this.opt.easing, c = 500 / this.opt.velocity, e = this.opt.width, f = this.opt.height, g = 4; for (d = 0; d < g; d++) { switch (d) { case 0: h = "-100px", i = "-100px"; break; case 1: h = "-100px", i = "100px"; break; case 2: h = "100px", i = "-100px"; break; case 3: h = "100px", i = "100px" } var j = this.getBannerClone(); j.css({ left: i, top: h, width: e, height: f }), this.addBannerClone(j); var k = d == g - 1 ? function () { a.finishAnimation() } : ""; j.animate({ opacity: "show", left: 0, top: 0 }, c, b, k) } }, animationParallel: function () { var a = this, b = "" == this.opt.easing ? "easeOutQuad" : this.opt.easing, c = 400 / this.opt.velocity, e = 16, f = Math.ceil(this.opt.width / e), g = this.opt.height; for (d = 0; d < e; d++) { var h = f * d, i = 0, j = this.getBannerClone(); j.css({ left: h, top: i - this.opt.height, width: f, height: g }), j.find("img").css({ left: this.fulloff - f * d, top: 0 }), this.addBannerClone(j); var k; d <= e / 2 - 1 ? k = 1400 - 200 * d : d > e / 2 - 1 && (k = 200 * (d - e / 2)), k /= 2.5; var l = d == e - 1 ? function () { a.finishAnimation() } : ""; j.delay(k).animate({ top: i + "px", left: h + "px", opacity: "show" }, c, b, l) } }, animationBlind: function (b) { var j, c = this, b = a.extend({}, { height: !1 }, b || {}), e = "" == this.opt.easing ? "easeOutQuad" : this.opt.easing, f = 400 / this.opt.velocity, g = 16, h = Math.ceil(this.opt.width / g), i = this.opt.height; for (d = 0; d < g; d++) { var k = h * d, l = 0, m = this.getBannerClone(); if (m.css({ left: k, top: l, width: h, height: i }), m.find("img").css({ left: this.fulloff - h * d, top: 0 }), this.addBannerClone(m), b.height) { d <= g / 2 - 1 ? j = 200 + 200 * d : d > g / 2 - 1 && (j = 200 * (g / 2 - d) + 100 * g); var n = d == g / 2 ? function () { c.finishAnimation() } : "" } else { d <= g / 2 - 1 ? j = 1400 - 200 * d : d > g / 2 - 1 && (j = 200 * (d - g / 2)); var n = d == g - 1 ? function () { c.finishAnimation() } : "" } if (j /= 2.5, b.height) { f += 2 * d; var e = "easeOutQuad"; m.delay(j).animate({ opacity: "show", top: l + "px", left: k + "px", height: "show" }, f, e, n) } else m.delay(j).animate({ opacity: "show", top: l + "px", left: k + "px", width: "show" }, f, e, n) } }, animationBlindDimension: function (b) { var c = this, b = a.extend({}, { height: !0, speed: 500, delay: 100 }, b || {}), e = "" == this.opt.easing ? "easeOutQuad" : this.opt.easing, f = b.speed / this.opt.velocity, g = 16, h = Math.ceil(this.opt.width / g), i = this.opt.height; for (d = 0; d < g; d++) { var j = h * d, k = 0, l = this.getBannerClone(); l.css({ left: j, top: k, width: h, height: i }), l.find("img").css({ left: this.fulloff - h * d, top: 0 }), this.addBannerClone(l); var m = b.delay * d, n = d == g - 1 ? function () { c.finishAnimation() } : ""; if (b.height) { var e = "easeOutQuad"; l.delay(m).animate({ opacity: "show", top: k + "px", left: j + "px", height: "show" }, f, e, n) } else l.delay(m).animate({ opacity: "show", top: k + "px", left: j + "px", width: "show" }, f, e, n) } }, animationDirection: function (b) { var c = this, b = a.extend({}, { direction: "top", delay_type: "sequence", total: 7 }, b || {}), e = "" == this.opt.easing ? "easeInOutExpo" : this.opt.easing, f = 1200 / this.opt.velocity, g = this.oldli.find(".defaultimg"), h = b.total; for (d = 0; d < h; d++) { switch (b.direction) { default: case "top": var i = Math.ceil(this.opt.width / h), j = this.opt.height, k = 0, l = i * d, m = -j, n = l, o = j, p = l, q = 0, r = l, s = 0, t = -l; break; case "bottom": var i = Math.ceil(this.opt.width / h), j = this.opt.height, k = 0, l = i * d, m = j, n = l, o = -j, p = l, q = 0, r = l, s = 0, t = -l; break; case "right": var i = this.opt.width, j = Math.ceil(this.opt.height / h), k = j * d, l = 0, m = k, n = i, o = k, p = -n, q = k, r = 0, s = -k, t = 0; break; case "left": var i = this.opt.width, j = Math.ceil(this.opt.height / h), k = j * d, l = 0, m = k, n = -i, o = k, p = -n, q = k, r = 0, s = -k, t = 0 } switch (b.delay_type) { case "zebra": default: var u = d % 2 == 0 ? 0 : 150; break; case "random": var u = 30 * (30 * Math.random()); break; case "sequence": var u = 100 * d } var v = this.getBannerClone(g); v.find("img").css({ left: this.fulloff + t, top: s }), v.css({ top: k, left: l, width: i, height: j }), this.addBannerClone(v), v.show(), v.delay(u).animate({ top: m, left: n }, f, e); var w = this.getBannerClone(); w.find("img").css({ left: this.fulloff + t, top: s }), w.css({ top: o, left: p, width: i, height: j }), this.addBannerClone(w), w.show(); var x = d == h - 1 ? function () { c.finishAnimation() } : ""; w.delay(u).animate({ top: q, left: r }, f, e, x) } }, animationGlassCube: function () { var a = this, b = "" == this.opt.easing ? "easeOutExpo" : this.opt.easing, c = 500 / this.opt.velocity, e = 20, f = 2 * Math.ceil(this.opt.width / e), g = this.opt.height / 2, h = 0; for (d = 0; d < e; d++) { mod = d % 2 == 0; var i = f * h, j = mod ? -this.opt.height : this.opt.height, k = f * h, l = mod ? 0 : g, m = -(f * h), n = mod ? 0 : -g, o = 120 * h, p = this.getBannerClone(); p.css({ left: i, top: j, width: f, height: g }), p.find("img").css({ left: this.fulloff + m + f / 1.5, top: n }).delay(o).animate({ left: this.fulloff + m, top: n }, 1.9 * c, "easeOutQuad"), this.addBannerClone(p); var q = d == e - 1 ? function () { a.finishAnimation() } : ""; p.show().delay(o).animate({ top: l, left: k }, c, b, q), d % 2 != 0 && h++ } }, animationGlassBlock: function () { var a = this, b = "" == this.opt.easing ? "easeOutExpo" : this.opt.easing, c = 700 / this.opt.velocity, e = 10, f = Math.ceil(this.opt.width / e), g = this.opt.height; for (d = 0; d < e; d++) { var h = f * d, i = 0, j = f * d, k = 0, l = -(f * d), m = 0, n = 100 * d, o = this.getBannerClone(); o.css({ left: h, top: i, width: f, height: g }), o.find("img").css({ left: this.fulloff + l + f / 1.5, top: m }).delay(n).animate({ left: this.fulloff + l, top: m }, 1.1 * c, "easeInOutQuad"), this.addBannerClone(o); var p = d == e - 1 ? function () { a.finishAnimation() } : ""; o.delay(n).animate({ top: k, left: j, opacity: "show" }, c, b, p) } }, animationCircles: function () { var a = this, c = "" == this.opt.easing ? "easeInQuad" : this.opt.easing, e = 500 / this.opt.velocity, f = 10, g = 100, h = Math.ceil(Math.sqrt(Math.pow(this.opt.width, 2) + Math.pow(this.opt.height, 2))); for (this.fulloff = this.currentli.find(".defaultimg").data("fxof"), this.fulloff == b && (this.fulloff = 0), d = 0; d < f; d++) { var i = (this.opt.width - g) / 2, j = (this.opt.height - g) / 2, k = i, l = j, m = null; m = this.getBannerCloneBackground({ image: this.currentli.find(".defaultimg").attr("src"), left: i, top: j, width: g, height: g, position: { top: -j, left: this.fulloff - i } }).css({ "border-radius": h + "px" }), g += 100, this.addBannerClone(m); var n = 70 * d, o = d == f - 1 ? function () { a.finishAnimation() } : ""; m.delay(n).animate({ top: l, left: k, opacity: "show" }, e, c, o) } }, animationCirclesInside: function () { var a = this, c = "" == this.opt.easing ? "easeInQuad" : this.opt.easing, e = 500 / this.opt.velocity, f = this.oldli.find(".defaultimg"); this.currentli.css("visibility", "visible"); var g = 10, h = Math.sqrt(Math.pow(this.opt.width, 2) + Math.pow(this.opt.height, 2)), h = Math.ceil(h), i = h; for (this.fulloff = f.data("fxof"), this.fulloff == b && (this.fulloff = 0), d = 0; d < g; d++) { var j = (this.opt.width - i) / 2, k = (this.opt.height - i) / 2, l = j, m = k, n = null; n = this.getBannerCloneBackground({ image: f.attr("src"), left: j, top: k, width: i, height: i, position: { top: -k, left: this.fulloff - j } }).css({ "border-radius": h + "px" }), i -= 100, this.addBannerClone(n), n.show(); var o = 70 * d, p = d == g - 1 ? function () { a.finishAnimation() } : ""; n.delay(o).animate({ top: m, left: l, opacity: "hide" }, e, c, p) } }, animationCirclesRotate: function () { var a = this, c = "" == this.opt.easing ? "easeOutQuad" : this.opt.easing, e = 500 / this.opt.velocity, f = this.oldli.find(".defaultimg"); this.currentli.css("visibility", "visible"); var g = 10, h = Math.ceil(Math.sqrt(Math.pow(this.opt.width, 2) + Math.pow(this.opt.height, 2))), i = h, j = navigator.userAgent, k = j.indexOf("Mozilla") != -1; for (this.fulloff = f.data("fxof"), this.fulloff == b && (this.fulloff = 0), d = 0; d < g; d++) { var l = (this.opt.width - i) / 2, m = (this.opt.height - i) / 2, n = l, o = m, p = null; k ? (p = this.getBannerClone(f), p.css({ left: l, top: m, width: i, height: i, "border-radius": h + "px" }), p.find("img").css({ left: this.fulloff - l, top: -m })) : p = this.getBannerCloneBackground({ image: f.attr("src"), left: l, top: m, width: i, height: i, position: { top: -m, left: this.fulloff - l } }).css({ "border-radius": h + "px" }), i -= 100, this.addBannerClone(p), p.show(); var q = 100 * d, r = d % 2 == 0 ? "20deg" : "-20deg", s = d == g - 1 ? function () { a.finishAnimation() } : ""; p.delay(q).animate({ top: o, left: n, opacity: "hide", rotate: r }, e, c, s) } }, animationDirectionBars: function (b) { var c = this, b = a.extend({}, { direction: "top" }, b || {}), e = "" == this.opt.easing ? "easeInOutQuad" : this.opt.easing, f = 400 / this.opt.velocity, g = this.oldli.find(".defaultimg"); this.currentli.css("visibility", "visible"); var h = 12, i = Math.ceil(this.opt.width / h), j = this.opt.height, k = "top" == b.direction ? -j : j; for (d = 0; d < h; d++) { var l = 0, m = i * d, n = 0, o = -(i * d), p = this.getBannerClone(g); p.css({ left: m + "px", top: l + "px", width: i, height: j }), p.find("img").css({ left: this.fulloff + o, top: n }), this.addBannerClone(p), p.show(); var q = 70 * d, r = d == h - 1 ? function () { c.finishAnimation() } : ""; p.delay(q).animate({ top: k }, f, e, r) } }, animationHideBars: function () { var a = this, b = "" == this.opt.easing ? "easeOutCirc" : this.opt.easing, c = 700 / this.opt.velocity, e = this.oldli.find(".defaultimg"); this.currentli.css("visibility", "visible"); var f = 10, g = f, h = Math.ceil(this.opt.width / f), i = this.opt.height; for (d = 0; d < g; d++) { var j = 0, k = h * d, l = 0, m = -(h * d), n = "+=" + h, o = this.getBannerClone(e); o.css({ left: 0, top: 0, width: h, height: i }), o.find("img").css({ left: this.fulloff + m, top: l }); var p = this.getBannerClone(e); p.css({ left: k + "px", top: j + "px", width: h, height: i }), p.html(o), this.addBannerClone(p), o.show(), p.show(); var q = 50 * d, r = d == g - 1 ? function () { a.finishAnimation() } : ""; o.delay(q).animate({ left: n }, c, b, r) } }, animationSwapBars: function (b) { var c = this, b = a.extend({}, { direction: "top", delay_type: "sequence", total: 7, easing: "easeOutCirc" }, b || {}), e = "" == this.opt.easing ? b.easing : this.opt.easing, f = 500 / this.opt.velocity, g = this.oldli.find(".defaultimg"), h = b.total; for (d = 0; d < h; d++) { var i = Math.ceil(this.opt.width / h), j = this.opt.height, l = i * d, t = -l; switch (b.delay_type) { case "zebra": default: var u = d % 2 == 0 ? 0 : 150; break; case "random": var u = 30 * (30 * Math.random()); break; case "sequence": var u = 100 * d } var v = this.getBannerClone(g); v.find("img").css({ left: this.fulloff + t, top: 0 }), v.css({ top: 0, left: 0, width: i, height: j }); var w = this.getBannerClone(); w.find("img").css({ left: this.fulloff + t, top: 0 }), w.css({ top: 0, left: -i, width: i, height: j }); var x = this.getBannerClone(); x.html("").append(v).append(w), x.css({ top: 0, left: l, width: i, height: j }), this.addBannerClone(x), x.show(), v.show(), w.show(); var y = d == h - 1 ? function () { c.finishAnimation() } : ""; v.delay(u).animate({ left: i }, f, e), w.delay(u).animate({ left: 0 }, f, e, y) } }, animationSwapBlocks: function (b) { var c = this, b = a.extend({}, { easing_old: "easeInOutQuad", easing_new: "easeOutQuad" }, b || {}), d = "" == this.opt.easing ? b.easing_old : this.opt.easing, e = "" == this.opt.easing ? b.easing_new : this.opt.easing, f = 800 / this.opt.velocity, g = this.oldli.find(".defaultimg"), h = 2, i = this.opt.width, j = Math.ceil(this.opt.height / h), k = this.getBannerClone(g); k.find("img").css({ left: this.fulloff, top: 0 }), k.css({ top: 0, left: 0, width: i, height: j }); var l = this.getBannerClone(g); l.find("img").css({ left: this.fulloff, top: -j }), l.css({ top: j, left: 0, width: i, height: j }); var m = this.getBannerClone(); m.find("img").css({ left: this.fulloff, top: j }), m.css({ top: 0, left: 0, width: i, height: j }); var n = this.getBannerClone(); n.find("img").css({ left: this.fulloff, top: -(j * h) }), n.css({ top: j, left: 0, width: i, height: j }), this.addBannerClone(m), this.addBannerClone(n), this.addBannerClone(k), this.addBannerClone(l), k.show(), l.show(), m.show(), n.show(); var o = function () { c.finishAnimation() }; k.find("img").animate({ top: j }, f, d, function () { k.remove() }), l.find("img").animate({ top: -(j * h) }, f, d, function () { l.remove() }), m.find("img").animate({ top: 0 }, f, e), n.find("img").animate({ top: -j }, f, e, o) }, animationCut: function (b) { var c = this, b = a.extend({}, { easing_old: "easeInOutExpo", easing_new: "easeInOutExpo" }, b || {}), d = "" == this.opt.easing ? b.easing_old : this.opt.easing, e = "" == this.opt.easing ? b.easing_new : this.opt.easing, f = 900 / this.opt.velocity, g = this.oldli.find(".defaultimg"), h = 2, i = this.opt.width, j = Math.ceil(this.opt.height / h), k = this.getBannerClone(g); k.find("img").css({ left: this.fulloff, top: 0 }), k.css({ top: 0, left: 0, width: i, height: j }); var l = this.getBannerClone(g); l.find("img").css({ left: this.fulloff, top: -j }), l.css({ top: j, left: 0, width: i, height: j }); var m = this.getBannerClone(); m.find("img").css({ left: this.fulloff, top: 0 }), m.css({ top: 0, left: i, width: i, height: j }); var n = this.getBannerClone(); n.find("img").css({ left: this.fulloff, top: -j }), n.css({ top: j, left: -i, width: i, height: j }), this.addBannerClone(m), this.addBannerClone(n), this.addBannerClone(k), this.addBannerClone(l), k.show(), l.show(), m.show(), n.show(); var o = function () { c.finishAnimation() }; k.animate({ left: -i }, f, d, function () { k.remove() }), l.animate({ left: i }, f, d, function () { l.remove() }), m.animate({ left: 0 }, f, e), n.animate({ left: 0 }, f, e, o) }, onYouTubePlayerAPIReady: function () { }, onPlayerStateChange: function (b) { var c = b.target.getVideoEmbedCode(), d = a("#" + c.split('id="')[1].split('"')[0]), e = d.closest(".banner-slider"), f = e.data("opt"); b.data == YT.PlayerState.PLAYING ? (e.data("play", !1), f.videoPlaying = !0, f.videoStarted = !0, e.parent().find(".play-btn").click(), "mute" == d.closest(".caption").data("volume") && player.mute()) : b.data != -1 && (e.data("play", !0), f.videoPlaying = !1, f.videoStopped = !0, e.parent().find(".play-btn").click()), 0 == b.data && f.nextSlideAtEnd && f.container.brNext() }, onPlayerReady: function (a) { a.target.playVideo() }, addEvent: function (a, b, c) { a.addEventListener ? a.addEventListener(b, c, !1) : a.attachEvent(b, c, !1) }, vimeoReady: function (b, c) { var d = $f(b), e = a("#" + b), f = e.closest(".banner-slider"), g = f.data("opt"); d.addEvent("ready", function (a) { c && d.api("play"), d.addEvent("play", function (a) { f.data("play", !1), g.videoPlaying = !0, f.parent().find(".play-btn").click(), "mute" == e.closest(".caption").data("volume") && d.api("setVolume", "0") }), d.addEvent("finish", function (a) { f.data("play", !0), g.videoPlaying = !1, g.videoStarted = !0, f.parent().find(".play-btn").click(), g.nextSlideAtEnd && g.container.brNext() }), d.addEvent("pause", function (a) { f.data("play", !0), g.videoPlaying = !1, g.videoStopped = !0, f.parent().find(".play-btn").click() }) }) }, html5VideoReady: function (c, d, e) { d == b && (d = a(c.b).attr("id")); var f = a("#" + d), g = f.closest(".banner-slider"), h = g.data("opt"); c.on("play", function () { "mute" == f.closest(".caption").data("volume") && c.volume(0), g.data("play", !1); try { h.videoPlaying = !0 } catch (a) { } g.parent().find(".play-btn").click() }), c.on("pause", function () { g.data("play", !0), h.videoPlaying = !1, h.videoStopped = !0, g.parent().find(".play-btn").click() }), c.on("ended", function () { g.data("play", !0), h.videoPlaying = !1, h.videoStopped = !0, g.parent().find(".play-btn").click(), h.nextSlideAtEnd && h.container.brNext() }), c.on("loadedmetadata", function (a) { var c = 0, d = 0; for (var h in this) try { this[h].hasOwnProperty("videoWidth") && (c = this[h].videoWidth), this[h].hasOwnProperty("videoHeight") && (d = this[h].videoHeight) } catch (a) { } var i = c / d; f.data("mediaAspect") == b && f.data("mediaAspect", i), f.closest(".caption").data("forcecover") && e.updateHTML5Size(f, g) }) }, updateHTML5Size: function (a, b) { var c = b.width(), d = b.height(), e = a.data("mediaAspect"), f = c / d; a.parent().find(".vjs-poster").css({ width: "100%", height: "100%" }), f < e ? (a.width(d * e).height(d), a.css("top", 0).css("left", -(d * e - c) / 2).css("height", d), a.find(".vjs-tech").css("width", d * e)) : (a.width(c).height(c / e), a.css("top", -(c / e - d) / 2).css("left", 0).css("height", c / e), a.find(".vjs-tech").css("width", "100%")) }, setCaptionPosition: function () { var a = this.currentli.find(".caption"); 0 == a.find("iframe") && (a.hasClass("hcenter") ? a.css({ height: this.opt.height + "px", top: "0px", left: (this.opt.width - a.outerWidth()) / 2 + "px" }) : a.hasClass("vcenter") && a.css({ width: this.opt.width + "px", left: "0px", top: (this.opt.height - a.outerHeight()) / 2 + "px" })) }, showCaption: function (c) {
                    var d = this, e = 0, f = 0; c.find(".caption").each(function (g) {
                        e = (d.opt.width - d.opt.startWidth) / 2, d.opt.bh > 1 && (d.opt.bw = 1, d.opt.bh = 1), d.opt.bw > 1 && (d.opt.bw = 1, d.opt.bh = 1); var h = d.opt.bw, i = d.opt.bh; d.opt.fullScreen && (f = (d.opt.height - d.opt.startHeight * d.opt.bh) / 2), f < 0 && (f = 0); var j = c.find(".caption:eq(" + g + ")"); j.stop(!0, !0); var k = !1; if (d.opt.width <= d.opt.hideCaptionAtResolution && 1 == j.data("captionhidden") ? (j.addClass("hidden-caption"), k = !0) : d.opt.width < d.opt.hideCaptionAtResolution ? (j.addClass("hidden-caption"), k = !0) : j.removeClass("hidden-caption"), !k) {
                            j.data("linktoslide") != b && (j.css({ cursor: "pointer" }), j.click(function () { var b = a(this), c = b.data("linktoslide"); "next" != c && "prev" != c ? (d.container.data("showus", c), d.container.parent().find(".rightarrow").click()) : "next" == c ? d.container.parent().find(".rightarrow").click() : "prev" == c && d.container.parent().find(".leftarrow").click() })), j.hasClass("coloredbg") && (e = 0), e < 0 && (e = 0), clearTimeout(j.data("timer")), clearTimeout(j.data("timer-end")); var l = "iframe" + Math.round(1e3 * Math.random() + 1); j.find("iframe").length > 0 && (j.data("autoplayonlyfirsttime") && j.data("autoplay", !0), j.find("iframe").each(function () { var c = a(this); if (c.attr("src").toLowerCase().indexOf("youtube") >= 0) if (d.opt.nextSlideAtEnd = j.data("nextslideatend"), c.hasClass("HasListener")) { if (j.data("autoplay")) { var e = j.data("player"); j.data("timerplay", setTimeout(function () { j.data("forcerewind") && e.seekTo(0), e.playVideo() }, j.data("start"))); var f = a("body").find("#" + d.opt.container.attr("id")).find(".timer"); setTimeout(function () { f.stop(), d.opt.videoPlaying = !0 }, 200) } } else try { c.attr("id", l); var e; if (e = j.data("autoplay") ? new YT.Player(l, { events: { onStateChange: d.onPlayerStateChange, onReady: d.onPlayerReady } }) : new YT.Player(l, { events: { onStateChange: d.onPlayerStateChange } }), c.addClass("HasListener"), j.data("player", e), j.data("autoplay")) { var f = a("body").find("#" + d.opt.container.attr("id")).find(".timer"); setTimeout(function () { f.stop(), d.opt.videoPlaying = !0 }, 200) } } catch (a) { } else if (c.attr("src").toLowerCase().indexOf("vimeo") >= 0) if (d.opt.nextSlideAtEnd = j.data("nextslideatend"), c.hasClass("HasListener")) { if (j.data("autoplay")) { var c = j.find("iframe"), n = c.attr("id"), o = $f(n); j.data("timerplay", setTimeout(function () { j.data("forcerewind") && o.api("seekTo", 0), o.api("play") }, j.data("start"))); var f = a("body").find("#" + d.opt.container.attr("id")).find(".timer"); setTimeout(function () { f.stop(), d.opt.videoPlaying = !0 }, 200) } } else { c.addClass("HasListener"), c.attr("id", l); for (var m, g = c.attr("src"), h = {}, i = g, k = /([^&=]+)=([^&]*)/g; m = k.exec(i) ;) h[decodeURIComponent(m[1])] = decodeURIComponent(m[2]); h.player_id != b ? g = g.replace(h.player_id, l) : g += "&player_id=" + l; try { g = g.replace("api=0", "api=1") } catch (a) { } g += "&api=1", c.attr("src", g); var e = j.find("iframe")[0]; if (j.data("autoplay")) { $f(e).addEvent("ready", function () { d.vimeoReady(l, !0) }); var f = a("body").find("#" + d.opt.container.attr("id")).find(".timer"); setTimeout(function () { f.stop(), d.opt.videoPlaying = !0 }, 200) } else $f(e).addEvent("ready", function () { d.vimeoReady(l, !1) }) } })), j.find("video").length > 0 && (j.data("autoplayonlyfirsttime") && j.data("autoplay", !0), j.find("video").each(function (c) { var e = a(this).parent(), f = 16 / 9; if ("4:3" == j.data("aspectratio") && (f = 4 / 3), e.data("mediaAspect", f), e.hasClass("video-js")) { if (d.opt.nextSlideAtEnd = j.data("nextslideatend"), e.hasClass("HasListener")) g = e.attr("id"); else { e.addClass("HasListener"); var g = "videoid_" + Math.round(1e3 * Math.random() + 1); e.attr("id", g), videojs(g).ready(function () { d.html5VideoReady(this, g, d) }) } if (e.find(".vjs-poster").css({ display: "block" }), j.data("autoplay")) { var h = a("body").find("#" + d.opt.container.attr("id")).find(".timer"); setTimeout(function () { h.stop(), d.opt.videoPlaying = !0 }, 200), videojs(g).ready(function () { var a = this; try { j.data("forcerewind") && a.currentTime(0) } catch (a) { } e.data("timerplay", setTimeout(function () { j.data("forcerewind") && a.currentTime(0), "mute" == e.closest(".caption").data("volume") && a.volume(0), setTimeout(function () { a.play(0), e.find(".vjs-poster").css({ display: "none" }) }, 50) }, 10 + j.data("start"))) }) } e.data("ww") == b && e.data("ww", e.width()), e.data("hh") == b && e.data("hh", e.height()), videojs(g).ready(function () { if (!j.hasClass("fullscreenvideo")) { var a = videojs(g); try { a.width(e.data("ww") * d.opt.bw), a.height(e.data("hh") * d.opt.bh) } catch (a) { } } }), e.closest(".caption").data("forcecover") && (d.updateHTML5Size(e, d.opt.container), e.addClass("fullcoveredvideo")) } })), (j.find("iframe").length > 0 || j.find("video").length > 0) && j.data("autoplayonlyfirsttime") && (j.data("autoplay", !1), j.data("autoplayonlyfirsttime", !1)), j.hasClass("randomrotate") && (d.opt.ie || d.opt.ie9) && j.removeClass("randomrotate").addClass("sfb"), j.removeClass("noFilterClass"); var m = 0, n = 0; if (j.find("img").length > 0) { var o = j.find("img"); o.data("ww") == b && o.data("ww", o.width()), o.data("hh") == b && o.data("hh", o.height()); var p = o.data("ww"), q = o.data("hh"); o.width(p * d.opt.bw), o.height(q * d.opt.bh), m = o.width(), n = o.height() } else if (j.find("iframe").length > 0) { var o = j.find("iframe"); o.css({ display: "block" }), j.data("ww") == b && j.data("ww", o.width()), j.data("hh") == b && j.data("hh", o.height()); var p = j.data("ww"), q = j.data("hh"), r = j; r.data("fsize") == b && r.data("fsize", parseInt(r.css("font-size"), 0) || 0), r.data("pt") == b && r.data("pt", parseInt(r.css("paddingTop"), 0) || 0), r.data("pb") == b && r.data("pb", parseInt(r.css("paddingBottom"), 0) || 0), r.data("pl") == b && r.data("pl", parseInt(r.css("paddingLeft"), 0) || 0), r.data("pr") == b && r.data("pr", parseInt(r.css("paddingRight"), 0) || 0), r.data("mt") == b && r.data("mt", parseInt(r.css("marginTop"), 0) || 0), r.data("mb") == b && r.data("mb", parseInt(r.css("marginBottom"), 0) || 0), r.data("ml") == b && r.data("ml", parseInt(r.css("marginLeft"), 0) || 0), r.data("mr") == b && r.data("mr", parseInt(r.css("marginRight"), 0) || 0), r.data("bt") == b && r.data("bt", parseInt(r.css("borderTopWidth"), 0) || 0), r.data("bb") == b && r.data("bb", parseInt(r.css("borderBottomWidth"), 0) || 0), r.data("bl") == b && r.data("bl", parseInt(r.css("borderLeftWidth"), 0) || 0), r.data("br") == b && r.data("br", parseInt(r.css("borderRightWidth"), 0) || 0), r.data("lh") == b && r.data("lh", parseInt(r.css("lineHeight"), 0) || 0); var s = d.opt.width, t = d.opt.height; s > d.opt.startWidth && (s = d.opt.startWidth), t > d.opt.startHeight && (t = d.opt.startHeight), j.hasClass("fullscreenvideo") ? j.css({ width: d.opt.startWidth * d.opt.bw, height: d.opt.startHeight * d.opt.bh }) : j.css({ "font-size": r.data("fsize") * d.opt.bw + "px", "padding-top": r.data("pt") * d.opt.bh + "px", "padding-bottom": r.data("pb") * d.opt.bh + "px", "padding-left": r.data("pl") * d.opt.bw + "px", "padding-right": r.data("pr") * d.opt.bw + "px", "margin-top": r.data("mt") * d.opt.bh + "px", "margin-bottom": r.data("mb") * d.opt.bh + "px", "margin-left": r.data("ml") * d.opt.bw + "px", "margin-right": r.data("mr") * d.opt.bw + "px", "border-top-width": r.data("bt") * d.opt.bh + "px", "border-bottom-width": r.data("bb") * d.opt.bh + "px", "border-left-width": r.data("bl") * d.opt.bw + "px", "border-right-width": r.data("br") * d.opt.bw + "px", "line-height": r.data("lh") * d.opt.bh + "px", height: q * d.opt.bh + "px", "white-space": "nowrap" }), o.width(p * d.opt.bw), o.height(q * d.opt.bh), m = o.width(), n = o.height() } else { j.find(".resizeme, .resizeme *").each(function () { d.calcCaptionResponsive(a(this)) }), j.hasClass("resizeme") && j.find("*").each(function () { d.calcCaptionResponsive(a(this)) }), d.calcCaptionResponsive(j), n = j.outerHeight(!0), m = j.outerWidth(!0); var u = j.outerHeight(), v = j.css("backgroundColor"); j.find(".frontcorner").css({ borderWidth: u + "px", left: 0 - u + "px", borderRight: "0px solid transparent", borderTopColor: v }), j.find(".frontcornertop").css({ borderWidth: u + "px", left: 0 - u + "px", borderRight: "0px solid transparent", borderBottomColor: v }), j.find(".backcorner").css({ borderWidth: u + "px", right: 0 - u + "px", borderLeft: "0px solid transparent", borderBottomColor: v }), j.find(".backcornertop").css({ borderWidth: u + "px", right: 0 - u + "px", borderLeft: "0px solid transparent", borderTopColor: v }) } var w = j.data("video"); if (w != b) { var x = d.opt.startWidth * d.opt.bw, y = d.opt.startHeight * d.opt.bh; j.html("").width(x).height(y); var z = a('<div class="video-frame"></div>'); j.append(z); var A = a('<div class="video-play"></div>'); j.append(A), A.bind("click", function () { d.opt.videoPlaying = !0, d.opt.videoStarted = !0, d.cap.find(".play-btn").click(), d.opt.showTimer && d.timer.hide(), z.html('<iframe frameborder="0" width="' + x + '" height="' + y + '" src="' + w + '" /><div class="video-close"></div>'); var a = z.find(".video-close"); a.bind("click", function () { d.opt.videoPlaying = !1, d.opt.videoStopped = !0, z.html(""), d.cap.find(".play-btn").click(), d.opt.showTimer && d.timer.show() }) }) } j.data("voffset") == b && j.data("voffset", 0), j.data("hoffset") == b && j.data("hoffset", 0); var B = j.data("voffset") * h, C = j.data("hoffset") * h, D = d.opt.startWidth * h, E = d.opt.startHeight * h; "center" != j.data("x") && "center" != j.data("xcenter") || (j.data("xcenter", "center"), j.data("x", (D - j.outerWidth(!0)) / 2 / h + C)), "left" != j.data("x") && "left" != j.data("xleft") || (j.data("xleft", "left"), j.data("x", 0 / h + C)), "right" != j.data("x") && "right" != j.data("xright") || (j.data("xright", "right"), j.data("x", (D - j.outerWidth(!0) + C) / h)), "center" != j.data("y") && "center" != j.data("ycenter") || (j.data("ycenter", "center"), j.data("y", (E - j.outerHeight(!0)) / 2 / d.opt.bh + B)), "top" != j.data("y") && "top" != j.data("ytop") || (j.data("ytop", "top"), j.data("y", B)), "bottom" != j.data("y") && "bottom" != j.data("ybottom") || (j.data("ybottom", "bottom"), j.data("y", (E - j.outerHeight(!0) + B) / h)); var F = 0, G = 0, H = 0, I = 0; if (j.hasClass("fullscreenvideo") || (F = h * j.data("x") + e, G = d.opt.bh * j.data("y") + f), j.hasClass("fade") && j.css({ opacity: 0, left: F + "px", top: G + "px" }), j.hasClass("randomrotate")) { j.css({ opacity: 0, left: F + "px", top: i * j.data("y") + f + "px" }); var J = 2 * Math.random() + 1, K = Math.round(200 * Math.random() - 100), L = Math.round(200 * Math.random() - 100), M = Math.round(200 * Math.random() - 100); j.data("repx", L), j.data("repy", M), j.data("repo", j.css("opacity")), j.data("rotate", K), j.data("scale", J), j.transition({ scale: J, rotate: K, x: L, y: M, duration: "0ms" }) } else d.opt.ie || d.opt.ie9 || j.transition({ scale: 1, rotate: 0 }); var N = j.data("opacity"); N == b && (N = 1), j.hasClass("sfb") && j.css({ opacity: 0, left: F + "px", top: G + 50 + "px" }), j.hasClass("sfl") && j.css({ opacity: 0, left: F - 50 + "px", top: G + "px" }), j.hasClass("sfr") && j.css({ opacity: 0, left: F + 50 + "px", top: G + "px" }), j.hasClass("sft") && j.css({ opacity: 0, left: F + "px", top: G - 50 + "px" }), j.hasClass("lfb") && j.css({ opacity: N, left: F + "px", top: 25 + d.opt.height + "px" }), j.hasClass("lfl") && j.css({ opacity: N, left: -15 - m + "px", top: G + "px" }), j.hasClass("lfr") && j.css({ opacity: N, left: 15 + d.opt.width + "px", top: G + "px" }), j.hasClass("lft") && j.css({ opacity: N, left: F + "px", top: -25 - n + "px" }), j.hasClass("skewfromleft") && (H = 85, j.css({ opacity: 0, left: -15 - m + "px", top: G + "px" }), j.transition({ skewX: H, duration: "0ms" })), j.hasClass("skewfromright") && (H = -85, j.css({ opacity: 0, left: 15 + d.opt.width + "px", top: G + "px" }), j.transition({ skewX: H, duration: "0ms" })), j.hasClass("skewfromleftshort") && (H = 85, j.css({ opacity: 0, left: F - 50 + "px", top: G + "px" }), j.transition({ skewX: H, duration: "0ms" })), j.hasClass("skewfromrightshort") && (H = -85, j.css({ opacity: 0, left: F + 50 + "px", top: G + "px" }), j.transition({ skewX: H, duration: "0ms" })), j.hasClass("customin") && (I = 90, j.css({ opacity: 0 }), j.transition({ origin: "50% 0%", perspective: 200, rotateX: I, duration: "0ms" })), j.data("repskewx", H), j.data("reprox", I), j.data("timer", setTimeout(function () {
                                if (j.css({ visibility: "visible" }), j.hasClass("fade") && (j.data("repo", j.css("opacity")), j.animate({ opacity: 1 }, { duration: j.data("speed") }), d.opt.ie && j.addClass("noFilterClass")), j.hasClass("randomrotate")) {
                                    var a = j.hasClass("fullscreenvideo") ? 0 : i * j.data("y") + f; j.transition({
                                        opacity: 1, scale: 1, left: F + "px", top: a + "px",
                                        rotate: 0, x: 0, y: 0, duration: j.data("speed")
                                    }), d.opt.ie && j.addClass("noFilterClass")
                                } if (j.hasClass("lfr") || j.hasClass("lfl") || j.hasClass("lft") || j.hasClass("lfb") || j.hasClass("sfr") || j.hasClass("sfl") || j.hasClass("sft") || j.hasClass("sfb") || j.hasClass("skewfromleft") || j.hasClass("skewfromright") || j.hasClass("skewfromleftshort") || j.hasClass("skewfromrightshort") || j.hasClass("customin")) { var c = j.data("opacity"), e = j.data("speed"), g = j.data("easing"); c == b && (c = 1), g == b && (g = d.opt.captionEasing), j.data("repx", j.position().left), j.data("repy", j.position().top), j.data("repo", j.css("opacity")), j.transition({ opacity: c, scale: 1, left: F + "px", top: G + "px", rotate: 0, x: 0, y: 0, skewX: 0, rotateX: 0, rotateY: 0, duration: e, easing: g }), d.opt.ie && j.addClass("noFilterClass") }
                            }, j.data("start"))), j.data("end") != b && j.data("timer-end", setTimeout(function () { (d.opt.ie || d.opt.ie9) && (j.hasClass("randomrotate") || j.hasClass("randomrotateout")) && j.removeClass("randomrotate").removeClass("randomrotateout").addClass("fadeout"), d.endMoveCaption(j) }, j.data("end")))
                        }
                    })
                }, calcCaptionResponsive: function (a) { a.data("fsize") == b && a.data("fsize", parseInt(a.css("font-size"), 0) || 0), a.data("pt") == b && a.data("pt", parseInt(a.css("paddingTop"), 0) || 0), a.data("pb") == b && a.data("pb", parseInt(a.css("paddingBottom"), 0) || 0), a.data("pl") == b && a.data("pl", parseInt(a.css("paddingLeft"), 0) || 0), a.data("pr") == b && a.data("pr", parseInt(a.css("paddingRight"), 0) || 0), a.data("mt") == b && a.data("mt", parseInt(a.css("marginTop"), 0) || 0), a.data("mb") == b && a.data("mb", parseInt(a.css("marginBottom"), 0) || 0), a.data("ml") == b && a.data("ml", parseInt(a.css("marginLeft"), 0) || 0), a.data("mr") == b && a.data("mr", parseInt(a.css("marginRight"), 0) || 0), a.data("bt") == b && a.data("bt", parseInt(a.css("borderTopWidth"), 0) || 0), a.data("bb") == b && a.data("bb", parseInt(a.css("borderBottomWidth"), 0) || 0), a.data("bl") == b && a.data("bl", parseInt(a.css("borderLeftWidth"), 0) || 0), a.data("br") == b && a.data("br", parseInt(a.css("borderRightWidth"), 0) || 0), a.data("lh") == b && a.data("lh", parseInt(a.css("lineHeight"), 0) || 0), a.data("minwidth") == b && a.data("minwidth", parseInt(a.css("minWidth"), 0) || 0), a.data("minheight") == b && a.data("minheight", parseInt(a.css("minHeight"), 0) || 0), a.data("maxwidth") == b && a.data("maxwidth", parseInt(a.css("maxWidth"), 0) || "none"), a.data("maxheight") == b && a.data("maxheight", parseInt(a.css("maxHeight"), 0) || "none"), a.css({ "font-size": Math.round(a.data("fsize") * this.opt.bw) + "px", "padding-top": Math.round(a.data("pt") * this.opt.bh) + "px", "padding-bottom": Math.round(a.data("pb") * this.opt.bh) + "px", "padding-left": Math.round(a.data("pl") * this.opt.bw) + "px", "padding-right": Math.round(a.data("pr") * this.opt.bw) + "px", "margin-top": a.data("mt") * this.opt.bh + "px", "margin-bottom": a.data("mb") * this.opt.bh + "px", "margin-left": a.data("ml") * this.opt.bw + "px", "margin-right": a.data("mr") * this.opt.bw + "px", borderTopWidth: Math.round(a.data("bt") * this.opt.bh) + "px", borderBottomWidth: Math.round(a.data("bb") * this.opt.bh) + "px", borderLeftWidth: Math.round(a.data("bl") * this.opt.bw) + "px", borderRightWidth: Math.round(a.data("br") * this.opt.bw) + "px", "line-height": Math.round(a.data("lh") * this.opt.bh) + "px", "white-space": "nowrap", minWidth: a.data("minwidth") * this.opt.bw + "px", minHeight: a.data("minheight") * this.opt.bh + "px" }), "none" != a.data("maxheight") && a.css({ maxHeight: a.data("maxheight") * this.opt.bh + "px" }), "none" != a.data("maxwidth") && a.css({ maxWidth: a.data("maxwidth") * this.opt.bw + "px" }) }, removeCaption: function (b) { var c = this; b.find(".caption").each(function (d) { var e = b.find(".caption:eq(" + d + ")"); if (e.stop(!0, !0), clearTimeout(e.data("timer")), clearTimeout(e.data("timer-end")), e.find("iframe").length > 0) { try { var f = e.find("iframe"), g = f.attr("id"), h = $f(g); h.api("pause") } catch (a) { } try { var i = e.data("player"); i.stopVideo() } catch (a) { } } if (e.find("video").length > 0) try { e.find("video").each(function (b) { var c = a(this).parent(), d = c.attr("id"); clearTimeout(c.data("timerplay")), videojs(d).ready(function () { var a = this; a.pause() }) }) } catch (a) { } try { c.endMoveCaption(e) } catch (a) { } }) }, endMoveCaption: function (c) { c.hasClass("randomrotate") && (this.opt.ie || this.opt.ie9) && c.removeClass("randomrotate").addClass("sfb"), c.hasClass("randomrotateout") && (this.opt.ie || this.opt.ie9) && c.removeClass("randomrotateout").addClass("stb"); var d = c.data("endspeed"); d == b && (d = c.data("speed")); var e = c.data("endeasing"); e == b && (e = "linear"); var f = c.data("repx"), g = c.data("repy"), h = c.data("repo"), i = c.data("repskewx"), j = c.data("reprox"); i == b && (i = 0), j == b && (j = 0), this.opt.ie && c.css({ opacity: "inherit", filter: "inherit" }), c.hasClass("ltr") || c.hasClass("ltl") || c.hasClass("ltt") || c.hasClass("ltb") || c.hasClass("str") || c.hasClass("stl") || c.hasClass("stt") || c.hasClass("stb") || c.hasClass("skewtoleft") || c.hasClass("skewtoright") || c.hasClass("skewtoleftshort") || c.hasClass("skewtorightshort") ? (f = c.position().left, g = c.position().top, i = 0, c.hasClass("ltr") || c.hasClass("skewtoright") ? f = this.opt.width + 60 : c.hasClass("ltl") || c.hasClass("skewtoleft") ? f = -c.width() - 60 : c.hasClass("ltt") ? g = -c.height() - 60 : c.hasClass("ltb") ? g = this.opt.height + 60 : c.hasClass("str") || c.hasClass("skewtorightshort") ? (f += 50, h = 0) : c.hasClass("stl") || c.hasClass("skewtoleftshort") ? (f -= 50, h = 0) : c.hasClass("stt") ? (g -= 50, h = 0) : c.hasClass("stb") && (g += 50, h = 0), (c.hasClass("skewtoright") || c.hasClass("skewtorightshort")) && (i = 35), (c.hasClass("skewtoleft") || c.hasClass("skewtoleftshort")) && (i = -35), c.transition({ opacity: h, left: f + "px", top: g + "px", skewX: i, duration: c.data("endspeed"), easing: e, complete: function () { (e.indexOf("Bounce") >= 0 || e.indexOf("Elastic") >= 0) && a(this).css({ visibility: "hidden" }) } }), this.opt.ie && c.removeClass("noFilterClass")) : c.hasClass("randomrotateout") ? (c.transition({ opacity: 0, scale: 2 * Math.random() + .3, left: Math.random() * this.opt.width + "px", top: Math.random() * this.opt.height + "px", rotate: 40 * Math.random(), duration: d, easing: e, complete: function () { a(this).css({ visibility: "hidden" }) } }), this.opt.ie && c.removeClass("noFilterClass")) : c.hasClass("fadeout") ? (this.opt.ie && c.removeClass("noFilterClass"), c.transition({ opacity: 0, duration: 200 })) : c.hasClass("customout") ? (c.transition({ opacity: h, scale: .75, origin: "50% 50%", perspective: 600, rotateX: 0, duration: c.data("endspeed"), easing: e, complete: function () { (e.indexOf("Bounce") >= 0 || e.indexOf("Elastic") >= 0) && a(this).css({ visibility: "hidden" }) } }), this.opt.ie && c.removeClass("noFilterClass")) : (c.hasClass("lfr") || c.hasClass("lfl") || c.hasClass("lft") || c.hasClass("lfb") || c.hasClass("sfr") || c.hasClass("sfl") || c.hasClass("sft") || c.hasClass("sfb") || c.hasClass("skewfromleft") || c.hasClass("skewfromright") || c.hasClass("skewfromleftshort") || c.hasClass("skewfromrightshort") ? (c.hasClass("lfr") ? f = this.opt.width + 60 : c.hasClass("lfl") ? f = -c.width() - 60 : c.hasClass("lft") ? g = -c.height() - 60 : c.hasClass("lfb") && (g = this.opt.height + 60), c.transition({ opacity: h, left: f + "px", top: g + "px", skewX: i, duration: c.data("endspeed"), easing: e, complete: function () { (e.indexOf("Bounce") >= 0 || e.indexOf("Elastic") >= 0) && a(this).css({ visibility: "hidden" }) } })) : c.hasClass("customin") ? c.transition({ opacity: h, origin: "50% 0%", perspective: 200, rotateX: j, duration: c.data("endspeed"), easing: e, complete: function () { (e.indexOf("Bounce") >= 0 || e.indexOf("Elastic") >= 0) && a(this).css({ visibility: "hidden" }) } }) : c.hasClass("fade") ? c.transition({ opacity: 0, duration: d }) : c.hasClass("randomrotate") && c.transition({ opacity: 0, scale: 2 * Math.random() + .3, left: Math.random() * this.opt.width + "px", top: Math.random() * this.opt.height + "px", rotate: 40 * Math.random(), duration: d, easing: e }), this.opt.ie && c.removeClass("noFilterClass")) }
            }; var k = a(this); return k.addClass("banner-slider"), k.css({ visibility: "visible" }), this.each(function () { e = new j(a(this), c) })
        }, brPause: function (b) { return this.each(function () { var b = a(this); b.data("play", !1), b.trigger("banner_rotator.onpause"), b.parent().find(".play-btn").click() }) }, brResume: function (b) { return this.each(function () { var b = a(this); b.data("play", !0), b.trigger("banner_rotator.onresume"), b.parent().find(".play-btn").click() }) }, brPrev: function (b) { return this.each(function () { var b = a(this); b.parent().find(".previous-btn").click() }) }, brNext: function (b) { return this.each(function () { var b = a(this); b.parent().find(".next-btn").click() }) }, brMaxSlide: function (b) { return a(this).find(">ul:first-child >li").length }, brShowSlide: function (b) { return this.each(function () { var c = a(this); c.data("showslide", b), c.parent().find(".next-btn").click() }) }, brCurrentSlide: function () { var b = a(this), c = b.data("opt"); return c.currentItem }, brLastSlide: function () { var b = a(this), c = b.data("opt"); return c.oldItem }, brScroll: function (b) { return this.each(function () { var c = a(this); a("body,html").animate({ scrollTop: c.offset().top + c.find(">ul >li").height() - b + "px" }, { duration: 400 }) }) }
    }); var c = "deg"; a.fn.rotate = function (b) { var d = a(this).css("transform") || "none"; if ("undefined" == typeof b) { if (d) { var e = d.match(/rotate\(([^)]+)\)/); if (e && e[1]) return e[1] } return 0 } var e = b.toString().match(/^(-?\d+(\.\d+)?)(.+)?$/); return e && (e[3] && (c = e[3]), a(this).css("transform", d.replace(/none|rotate\([^)]*\)/, "") + "rotate(" + e[1] + c + ")")), this }, a.fx.step.rotate = function (b) { a(b.elem).rotate(b.now + c) }
}(jQuery);